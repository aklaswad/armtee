- name: Ignore Comment
  data:
    name: test
  tmpl: |-
    a
    //- b
    c
  expected: |-
    a
    c

- name: Render Value
  data:
    name: test
  tmpl: |-
    <% data.name %>
  expected: |-
    test

- name: Render letter in the middle of word
  data:
    interface: cli
  tmpl: |-
    a<% data.interface %>i
  expected: |-
    aclii

- name: Render zero number
  data:
    age: 0
  tmpl: |-
    age <% data.age %>
  expected: |-
    age 0

- name: Render single quotes
  data:
    age: 0
  tmpl: |-
    age '<% data.age %>' ok
  expected: |-
    age '0' ok

- name: Render double quotes
  data:
    age: 0
  tmpl: |-
    age "<% data.age %>" ok
  expected: |-
    age "0" ok

- name: Render backtick
  data:
    age: 0
  tmpl: |-
    age `<% data.age %>` ok
  expected: |-
    age `0` ok

- name: Render shell style EOL escape
  data:
    pkg: bar
  tmpl: |-
    apt install foo \
      <% data.pkg %> \
      buz
  expected: |-
    apt install foo \
      bar \
      buz
- name: escape continuous backslashes at the end of line
  data:
    pkg: bar
  tmpl: |-
      <% data.pkg %> \\
      buz \\\
      boo \\\\
  expected: |-
      bar \\
      buz \\\
      boo \\\\
- name: Render word in the middle of sentence
  data:
    emotion: love
  tmpl: |-
    I <% data.emotion %> tests
  expected: |-
    I love tests

- name: Render Loop
  data:
    nums: [ 1, 2, 3 ]
  tmpl: |-
    //! const output = data.nums.join('')
    <% output %>
  expected: |-
    123

- name: Loop using Line based templating
  data:
    letters:
      - b
      - c
      - d
  tmpl: |-
    a
    ##! data.letters.forEach( l => {
    :<% l %>
    ##! })
    e
  expected: |-
    a
    :b
    :c
    :d
    e

- name: Loop using Line based templating alternative syntax
  data:
    letters:
      - b
      - c
      - d
  tmpl: |-
    a
    //! data.letters.forEach( l => {
      :<% l %>
    //! })
    e
  expected: |-
    a
      :b
      :c
      :d
    e

- name: Throw rendering error, for example member access for undefined
  error: Armtee render error
  data:
    foo: { bar: 42 }
  tmpl: |-
    <% data.foo.bar.fizz.buzz %>

- name: Throw compile error for bad javascript
  error: Failed to compile template
  skip: Wakaranai
  data:
    nums: [ 1, 2, 3 ]
  tmpl: |
    //! data.nums.forEach( n => {
      <% n %> oooooooooooooooooooo
    //! })
    //! for (var i=0; i<2; i++) {
    //!   // foo
    //! )}}

- name: Change Tag
  data:
    name: foo
    value: bar
  tmpl: |-
    <% data.name %>
    //% TAG {{ }}
    {{ data.value }}
  expected: |-
    foo
    bar

- name: Change Root
  data:
    name: foo
    value: bar
  tmpl: |-
    //% ROOT item
    <% item.name %>:<% item.value %>
  expected: |-
    foo:bar


- name: Include hello
  tmpfile: true
  data:
    name: world
  tmpl: |-
    Hello. Repeat after me?
    ##% INCLUDE ./hello.tmpl data
    thanks
  expected: |-
    Hello. Repeat after me?
    hello world
    thanks

- name: Nested Include
  tmpfile: true
  data:
    name: world
  tmpl: |-
    Um
    ##% INCLUDE hello_wrapper.tmpl data
    thanks
  expected: |-
    Um
    say
    hello world
    to you
    thanks

- name: Nested Include alternative syntax
  tmpfile: true
  data:
    name: world
  tmpl: |-
    Um
    //% INCLUDE hello_wrapper.tmpl data
    thanks
  expected: |-
    Um
    say
    hello world
    to you
    thanks

- name: Stop circular including
  tmpfile: true
  error: Too deep include
  data:
    name: world
  tmpl: |-
    //% INCLUDE each1.tmpl data

- name: Indent space
  data:
    name: foo
  tmpl: |-
    bar
    //% INDENT +2
    <% data.name %>
    //% INDENT -
    bar
  expected: |-
    bar
      foo
    bar
- name: Indent 4 space
  data:
    name: foo
  tmpl: |-
    bar
    //% INDENT +4
    <% data.name %>
    //% INDENT -
    bar
  expected: |-
    bar
        foo
    bar

- name: Multiple indents
  data:
    name: foo
  tmpl: |-
    bar
    //% INDENT +4
    <% data.name %>
    //% INDENT +4
    <% data.name %>
    bar
    //% INDENT -
    fizz
    //% INDENT -
    buzz
  expected: |-
    bar
        foo
            foo
            bar
        fizz
    buzz

- name: Indent with tab
  data:
    name: foo
  tmpl: |-
    bar
    //% INDENT t
    <% data.name %>
    //% INDENT -
    bar
  expected: |-
    bar
    	foo
    bar
- name: Indent inside included template will automatically fixed
  data: 1
  debug: 10
  tmpfile: true
  tmpl: |-
    foo
    //% INDENT 4
    bar
    //% INCLUDE indent.tmpl
    fizz
    //% INDENT -
    buzz
  expected: |-
    foo
        bar
        inc0
            inc1
                inc2
        fizz
    buzz